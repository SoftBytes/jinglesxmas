{"version":3,"sources":["treesForm/trees.js","colorConsts.js","treesForm/treeTile/styles.js","treesForm/treeTile/index.js","treesForm/checkbox/styles.js","treesForm/checkbox/index.js","treesForm/datesField/styles.js","treesForm/datesField/index.js","treesForm/postCodeInput/styles.js","treesForm/postCodeInput/index.js","treesForm/couponInput/styles.js","treesForm/couponInput/index.js","treesForm/additionalItems.js","treesForm/zones.js","treesForm/styles.js","treesForm/index.js","styles.js","App.js","serviceWorker.js","index.js"],"names":["TREES","name","height","price","key","selected","discounts","code","value","productKeys","_productKeys","Object","defineProperty","_productKeys2","_productKeys3","RED","CTA","treeTile","css","_templateObject","activeClass","_templateObject2","bigTree","_templateObject3","treeHeight","_templateObject4","_templateObject5","title","_templateObject6","hr","_templateObject7","TreeTile","_ref","_classNames","_ref$tree","tree","selectTree","discount","_tree$height","_tree$price","tilesClasses","classNames","styles","displayPrice","react_default","a","createElement","Fragment","className","onClick","concat","input","styles_templateObject","Checkbox","_ref$type","type","_ref$checked","checked","_ref$disabled","disabled","onChange","datesField_styles_templateObject","calendar","styles_templateObject2","DatesField","props","_this","classCallCheck","this","_super","call","isBlocked","availableDays","day","find","d","date","deliveryDate","state","focused","daySize","onDateChange","bind","assertThisInitialized","onFocusChange","window","addEventListener","resize","newSize","innerWidth","setState","removeEventListener","prevProps","onDeliveryDateChange","_this2","_this$state","_this$props$available","react_dates","numberOfMonths","initialVisibleMonth","moment","isDayBlocked","noNavButtons","hideKeyboardShortcutsPanel","React","Component","postcode","postCodeInput_styles_templateObject","label","postCodeInput_styles_templateObject2","error","styles_templateObject3","PostCodeInput","handleChange","event","number","Number","target","onPostCodeChange","isNaN","valid","isMissingPostcode","postCodeEnum","postcodes","c","areaSurcharge","zone","pattern","maxLength","minLength","placeholder","href","couponInput_styles_templateObject","couponInput_styles_templateObject2","couponInput_styles_templateObject3","CouponInput","coupon","onCouponChange","ADDITIONAL_ITEMS","large","ZONES","C2","availableDates","SE","SE1","N","N1","WN","WN1","S","S1","W","W1","fetchPostCodesFromJson","postcodes_json","map","p","surcharge","console","dir","tilesWpap","treesForm_styles_templateObject","checkboxesWpap","treesForm_styles_templateObject2","checkboxLabel","treesForm_styles_templateObject3","styles_templateObject4","h2","styles_templateObject5","boxWpap","styles_templateObject6","cta","styles_templateObject7","subTextGreen","_templateObject8","surchargeMessage","_templateObject9","installationMessage","_templateObject10","TreesForm","defaultTree","defaultAdditionalSelection","trees","selectedTree","checkedItemsSet","Set","disabledItemsSet","total","dateSurcharge","postCode","isFormValid","formErrorMessage","onAdditionalItemsChange","onSubmit","item","objectSpread2","getTotal","_this3","_ref$checkedItems","checkedItems","toConsumableArray","_ref$dateSurcharge","_ref$areaSurcharge","_ref$discount","additinalItemsPrice","reduce","sum","isAddedItemLargeStand","_this4","_this5","newDeliveryDate","newDateSurcharge","_this6","e","_this7","_this$state2","isShowInstallationMessage","_e$target","itemKey","isChecked","i","add","delete","isShowInstallMessage","checkInstallation","includes","installation","_ref2","slice","arguments","length","undefined","_this8","preventDefault","log","addOns","deliveryDay","area","deliveryPrice","_this9","_this$state3","treesList","treesForm_treeTile","checkboxes","labelText","getLabelText","isShowMessage","treesForm_checkbox","has","method","action","formatTree","formatAdditionalItemsNames","formatDate","formatArea","formatDeliveryPrice","postCodeInput_PostCodeInput","datesField_DatesField","couponInput_CouponInput","pageWpap","src_styles_templateObject","specialOffer","src_styles_templateObject2","subTextRed","src_styles_templateObject3","src_styles_templateObject4","h1","src_styles_templateObject5","car","src_styles_templateObject6","App","done","setTimeout","anchor","document","getElementsByName","scrollIntoView","behavior","scrollToForm","treesForm","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6417603.chunk.js","sourcesContent":["export const STANDARD_TREE_NAME = 'Standard'\nexport const LARGE_TREE_NAME = 'Large'\n\n// prod_IJj7l2rVzMfaXC\tTree 6\n// prod_IJj4eyw0urKfb1\tTree 7\n\n// Standard Discounted prod_IL2qKR5rBwNHo8 \n// Large Discounted prod_IL30KubFVJZaBg\n\n// prod_ILkB6A8o7ejquA\tStandard Tree ($10 off)\n// prod_ILkAMf0WvFetDc\tLarge Tree ($10 off)\n// prod_ILk9ZailKADbHp\tStandard Tree ($5 off)\n// prod_ILk9U5RNPlNgd9\tLarge Tree ($5 off)\n\nexport const TREES = [{\n        name: STANDARD_TREE_NAME,\n        height: '1.8m',\n        price: 109,\n        key: 'prod_IJj7l2rVzMfaXC',\n        selected: true,\n    },{\n        name: LARGE_TREE_NAME,\n        height: '2.1m',\n        price: 139,\n        key: 'prod_IJj4eyw0urKfb1',\n    }]\n\n\nexport const discounts = [{\n    code: 'JINGLES2020',\n    value: 20,\n    productKeys: { \n        [STANDARD_TREE_NAME] : 'prod_IL2qKR5rBwNHo8',\n        [LARGE_TREE_NAME]: 'prod_IL30KubFVJZaBg',\n    }\n    }, {\n    code: 'HAPPY2021',\n    value: 10,\n    productKeys: {\n        [STANDARD_TREE_NAME] : 'prod_ILkB6A8o7ejquA', \n        [LARGE_TREE_NAME]: 'prod_ILkAMf0WvFetDc',\n    }\n    }, {\n    code: 'ELFSGIFT5',\n    value: 5,\n    productKeys: {\n        [STANDARD_TREE_NAME] :'prod_ILk9ZailKADbHp', \n        [LARGE_TREE_NAME]: 'prod_ILk9U5RNPlNgd9',\n    }\n    }]","export const RED = '#ff1212'\nexport const PALE_GREEN = '#f4f5eb'\nexport const CTA = '#6e9366'\nexport const DARK_GREEN = '#2b4432'\nexport const YELLOW = '#ffffa5'\n\n","import { css } from 'emotion'\nimport { RED, CTA } from '../../colorConsts'\n\nexport const treeTile = css`\n  width: 46%;\n  background-color: #fdecd3;\n  padding: .5em 0 .5em 2.6em;\n  box-sizing: border-box;\n  border-radius: 6px;\n  box-shadow: 2px 2px 2px #ddd;\n  text-align: center;\n  font-size: 0.6em;\n  margin: 0.5em;\n\n  background-image: url(\"./images/tree_card.png\"); \n  background-repeat: no-repeat;\n  background-size: 2.6em;\n  background-position: left 1em bottom .4em;\n\n  @media (min-width: 375px) {\n    font-size: 1.1em;\n  }\n\n  @media (min-width: 768px) {\n    background-position: left 1.2em bottom .4em;\n    width: 300px;\n    margin: 1em;\n  }\n`\n\nexport const activeClass = css`\n  border: 1px solid ${RED};\n  label {\n    font-weight: 600;\n  }\n`\n\nexport const bigTree = css`\n  background-size: 3.1em;\n`\n\nexport const treeHeight = css`\n  font-size: 1em;\n  line-height: 1.1em;\n  color: ${RED};\n`\n\nexport const price = css`\n  font-size: 1em;\n  line-height: 1.1em;\n`\n\nexport const title = css`\n  color: ${RED};\n  font-weight: 500;\n\n  font-size: 18px;\n\n  @media (min-width: 375px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 1.4em;\n  }\n\n`\n\nexport const hr = css`\n  border: 0;\n  height: 0;\n  border-top: 1px solid ${CTA};\n  border-bottom: 1px solid ${CTA};\n  margin: 0 20px;\n\n  @media (min-width: 375px) {\n    margin: 0 40px;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 4em;\n  }\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport * as trees from '../trees'\nimport * as styles from './styles'\n\nexport const TreeTile = ({ tree = {}, selectTree, discount }) => {\n\n  const {\n    name,\n    height = '',\n    price = '',\n    selected,\n  } = tree\n\n  let tilesClasses = classNames({\n    [styles.treeTile] : true,\n    [styles.activeClass] : !!selected,\n    [styles.bigTree]: name === trees.LARGE_TREE_NAME,\n  })\n\n  const displayPrice = price - ((discount && discount.value) || 0) \n\n  return (\n    <>\n      <div className={tilesClasses} \n          onClick={() => { selectTree(tree) }}\n      >\n        <label className={styles.title}>{name}</label>\n        <div className={styles.treeHeight} >{height}</div>\n        <hr className={styles.hr}/>\n        <div className={styles.price} >{`$${displayPrice}`}</div>\n      </div>\n    </>\n  )\n}\n\nexport default TreeTile\n\nTreeTile.propTypes = {\n  tree: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  selectTree: PropTypes.func,\n  discount: PropTypes.shape({\n    value: PropTypes.number,\n  }),\n}\n","import { css } from 'emotion'\n\nexport const input = css`\n  margin-right: 0.4em;\n`\n\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport * as styles from './styles'\n\nconst Checkbox = ({ \n  type = 'checkbox', \n  name, \n  checked = false, \n  disabled = false,\n  onChange,\n}) => { \n  return (\n    <input \n      className={styles.input}\n      type={type} \n      name={name} \n      checked={checked} \n      disabled={disabled}\n      onChange={onChange} \n    />\n  )\n}\n\n\nCheckbox.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default Checkbox","import { css } from 'emotion'\nimport { RED, CTA } from '../../colorConsts'\n\nexport const datesSelect = css`\n  border: 1px solid ${CTA};\n  color: ${RED} !important;\n  line-height: 1.3;\n  padding: .6em 1.4em .5em .8em;\n  width: 100%;\n  max-width: 100%;\n  box-sizing: border-box;\n  margin: 0 auto 1em;\n  border: 1px solid #aaa;\n  box-shadow: 0 1px 0 1px rgba(0,0,0,.04);\n  border-radius: .5em;\n\n  @media (min-width: 768px) {\n    width: 80%;\n    max-width: 80%;\n  }\n\n`\n\nexport const calendar = css`\n  \n  * {\n    font-size: 16px;\n  }\n    td.CalendarDay__selected, \n    td.CalendarDay__selected:active, \n    td.CalendarDay__selected:hover {\n        border: 1px double ${CTA} !important;\n        background: ${CTA} !important;\n    }\n\n    .DayPicker {\n        margin: .6em auto 1em;\n    }\n\n    label {\n        color: ${CTA};\n        font-family: 'IM Fell DW Pica SC', serif;\n        margin: .6em auto;\n        font-size: 1.4em;\n    }\n\n    margin: 1em auto 0;\n    text-align: center;\n\n`\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DayPickerSingleDateController } from 'react-dates'\nimport moment from 'moment'\nimport * as styles from './styles'\n\nexport default class DatesField extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    const { deliveryDate } = this.props\n\n    this.state = {\n      date: deliveryDate,\n      focused: true,\n      daySize: 35,\n    }\n\n    this.onDateChange = this.onDateChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  resize() {\n    const { daySize } = this.state\n    let newSize = daySize\n    if ( window.innerWidth <= 325 ) {\n      newSize = 29\n    } else if ( window.innerWidth < 400 ) {\n      newSize = 35\n    } else {\n      newSize = 39\n    }\n    \n    if (daySize === newSize) {\n      return\n    }\n    this.setState({ daySize: newSize })\n  }\n\n  componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.deliveryDate !== prevProps.deliveryDate) {\n      this.setState({ \n        date: this.props.deliveryDate\n      })\n    }\n  }\n\n  onDateChange(date) {\n    const { onDeliveryDateChange } = this.props\n    onDeliveryDateChange(date)\n    this.setState({ date })\n  }\n\n  onFocusChange() {\n    // Force the focused states to always be truthy so that date is always selectable\n    this.setState({ focused: true })\n  }\n\n  isBlocked = (availableDays, day) => {\n    return !availableDays.find(d => d === day.date())\n  }\n\n  render() {\n    const { focused, daySize, date } = this.state\n    const { availableDays = [] } = this.props\n    const isDayBlocked = (day) => this.isBlocked(availableDays, day)\n    return (\n      <div className={styles.calendar}>\n        <label>Delivery Date</label>\n        <DayPickerSingleDateController\n          numberOfMonths={1} \n          focused={focused}\n          date={date}\n          daySize={daySize}\n          initialVisibleMonth={() => moment('12 2020', 'MM YYYY')}\n          isDayBlocked={isDayBlocked}\n          noNavButtons={true}\n          hideKeyboardShortcutsPanel={true}\n          onDateChange={this.onDateChange}\n          onFocusChange={this.onFocusChange}\n        />\n        \n      </div>\n    );\n    }\n  }\n  \n  DatesField.propTypes = {\n    onDeliveryDateChange: PropTypes.func.isRequired,\n    availableDays: PropTypes.array,\n    deliveryDate: PropTypes.shape(),\n  }\n  ","import { css } from 'emotion'\nimport { CTA, DARK_GREEN } from '../../colorConsts'\n\nexport const postcode = css`\n  border: 1px solid ${CTA};\n  \n  font-size: 1.2em;\n  line-height: 1.2em;\n  padding: .4em 1.2em .3em .6em;\n  width: 7em;\n  max-width: 80%;\n  box-sizing: border-box;\n  margin: .8em auto 0;\n  border-radius: 6px;\n\n`\n\nexport const label = css`\n  color: ${CTA};\n  font-family: 'IM Fell DW Pica SC', serif !important;\n  box-sizing: border-box;\n  margin: .8em 0.4em 0;\n  width: 6em;\n  font-size: 1.4em;\n  line-height: 2em;\n\n`\n\nexport const error = css`\n  color: ${DARK_GREEN};\n  font-size: 20px;\n  line-height: 22px;\n  margin: 1em 0;\n\n  @media (min-width: 768px) {\n    font-size: 1.1em;\n    line-height: 1.2em;\n    margin: .5em 0;\n  }\n\n  * {\n    font-size: 1em;\n  }\n`\n\n\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport * as styles from './styles'\n\nexport default class PostCodeInput extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n      valid: true,\n      isMissingPostcode: false,\n      areaSurcharge: false,\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n    handleChange = (event) => {\n      const number = Number(event.target.value)\n      const { onPostCodeChange } = this.props\n      if (isNaN(number)) {\n        return\n      } \n\n      const valid = (number/1000 | 0) === 3\n\n      let isMissingPostcode = false\n      const { postcodes } = this.props\n      const postCodeEnum = postcodes.find(c => c.code === number) \n      if(valid) {\n        isMissingPostcode = !postCodeEnum\n      }\n      const areaSurcharge = postCodeEnum ? postCodeEnum.zone.areaSurcharge : false\n\n      onPostCodeChange(number, valid)\n      this.setState({ \n        value: number,\n        valid,\n        isMissingPostcode,\n        areaSurcharge,\n      })\n    }\n  \n    render() {\n      const { valid, value, isMissingPostcode, areaSurcharge } = this.state\n  \n      return (\n        <>\n          <label className={styles.label}>Postcode</label>\n          <input \n            className={styles.postcode}\n            type=\"text\" pattern=\"[0-9]{4}\"\n            maxLength={4} minLength={4}\n            placeholder=\"3000\"\n            name=\"postcode\" value={value} \n            onChange={this.handleChange.bind(this)}\n          />\n          {areaSurcharge && (\n            <p className={styles.error}>\n              Delivery area surcharge of ${areaSurcharge} has been applied for selected postcode.\n            </p>\n          )}\n          {!valid && (\n            <p className={styles.error}>\n              Please enter a valid Victorian postcode.\n            </p>\n          )}\n          {isMissingPostcode && (\n            <p className={styles.error}>\n              {`Oops! It looks like ${value} is out of our delivery range, please call us on `}\n                <a href=\"tel:0411399607\">0411399607</a>\n              {` for delivery quote to your area.`}\n          </p>\n          )}\n\n          </>\n      );\n    }\n  }\n  \n  PostCodeInput.propTypes = {\n    onPostCodeChange: PropTypes.func.isRequired,\n  }","import { css } from 'emotion'\nimport { CTA, DARK_GREEN } from '../../colorConsts'\n\nexport const postcode = css`\n  border: 1px solid ${CTA};\n  \n  font-size: 1.2em;\n  line-height: 1.2em;\n  padding: .4em 1.2em .3em .6em;\n  width: 8em;\n  max-width: 80%;\n  box-sizing: border-box;\n  margin: .8em auto 1em;\n  border-radius: 6px;\n\n`\n\nexport const label = css`\n  color: ${CTA};\n  font-family: 'IM Fell DW Pica SC', serif !important;\n  box-sizing: border-box;\n  margin: .8em 0.4em 1em;\n  width: 6em;\n  font-size: 1.4em;\n  line-height: 2em;\n\n`\n\nexport const error = css`\n  color: ${DARK_GREEN};\n  font-size: 20px;\n  line-height: 22px;\n  margin: 0 0 1em;\n\n  @media (min-width: 768px) {\n    font-size: 1.1em;\n    line-height: 1.2em;\n    margin: 0 0 .5em;\n  }\n\n`\n\n","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { discounts } from '../trees'\nimport * as styles from './styles'\n\n\nexport default class CouponInput extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n      discount: {},\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n    handleChange = (event) => {\n      const coupon = event.target.value\n      const { onCouponChange } = this.props\n\n      const discount = discounts.find(d => d.code === coupon)\n      onCouponChange(discount)\n\n      this.setState({ \n        value: coupon,\n        discount,\n      })\n    }\n  \n    render() {\n      const { value, discount } = this.state\n  \n      return (\n        <>\n          <label className={styles.label}>Coupon</label>\n          <input \n            className={styles.postcode}\n            type=\"text\" \n            placeholder=\"coupon\"\n            name=\"coupon\" value={value} \n            onChange={this.handleChange.bind(this)}\n          />\n          {!!(discount && discount.value) && (\n            <p className={styles.error}>\n              {`Discount of $${discount.value} has been applied.`}\n            </p>\n          )}\n        </>\n      )\n    }\n  }\n  \n  CouponInput.propTypes = {\n    onCouponChange: PropTypes.func.isRequired,\n  }","export const STAND_KEY = 'cincostand'\nexport const INSTALLATION_KEY = 'installation'\n\n// prod_IJw75RnppIFZpM\tTree Installtion\n// prod_IJj83NN3LTVrfV\tTree Preservative\n// prod_IJj8xejfYwloc6\tWatering Kit\n// prod_IJj8Dz3eLUcKTJ\tTree Disposal\n// prod_IJj7tjbVfgty7J\tCinco Stand\n// prod_IJj4MpVfOHsjuG\tLarge Cinco Stand\n\nexport const ADDITIONAL_ITEMS = [{\n        name: 'prod_IJj7tjbVfgty7J',\n        key: STAND_KEY,\n        label: 'Cinco Stand',\n        price: 45,\n        large: {\n          name: 'prod_IJj4MpVfOHsjuG',\n          key: 'largecincostand',\n          label: 'Large Cinco Stand',\n          price: 60,\n        },\n      },\n      {\n        name: 'prod_IJw75RnppIFZpM',\n        key: INSTALLATION_KEY,\n        label: 'Installation',\n        price: 20,\n      },\n      {\n        name: 'prod_IJj8xejfYwloc6',\n        key: 'wateringkit',\n        label: 'Watering Kit',\n        price: 25,\n      },\n      {\n        name: 'prod_IJj8Dz3eLUcKTJ',\n        key: 'disposal',\n        label: 'Disposal',\n        price: 15,\n      },\n      {\n        name: 'prod_IJj83NN3LTVrfV',\n        key: 'preservative',\n        label: 'Preservative',\n        price: 5,\n      },\n]","import * as postcodes_json from './zones.json'\n\nexport const WEEKEND_SURCHARGE = 25\nexport const REMOTE_AREA_SURCHARGE = 25\nexport const CBD_SURCHARGE = 50\n\n/*\nCITY\tThursday\t3,5,6,10,12,13,17,19,20\nNORTH\tWednesday\t2,5,6,9,12,13,16,19,20\nWEST\tThursday\t3,5,6,10,12,13,17,19,20\nWEST/NORTH\tWednesday, Thursday\t2,3,5,6,8,9,12,13,16,17,19,20\nSOUTH/EAST\tMonday, Tuesday\t5,6,7,8,12,13,14,15,19,20\nSOUTH\tMonday, Tuesday, Friday\t4,5,6,7,8,11,12,13,14,15,18,19,20\n*/\nexport const ZONES = {\n    C2 : {\n        name: 'C2',\n        areaSurcharge: CBD_SURCHARGE,\n        availableDates: [3,5,6,10,12,13,17,19,20],\n    },\n    SE : {\n        name: 'E',\n        areaSurcharge: false,\n        availableDates: [5,6,7,8,12,13,14,15,19,20],\n    },\n    SE1 : {\n        name: 'E1',\n        areaSurcharge: REMOTE_AREA_SURCHARGE,\n        availableDates: [5,6,7,8,12,13,14,15,19,20],\n    },\n    N : {\n        name: 'N',\n        areaSurcharge: false,\n        availableDates: [2,5,6,9,12,13,16,19,20],\n    },\n    N1 : {\n        name: 'N1',\n        areaSurcharge: REMOTE_AREA_SURCHARGE,\n        availableDates: [2,5,6,9,12,13,16,19,20],\n    },\n    WN : {\n        name: 'N',\n        areaSurcharge: false,\n        availableDates: [2,3,5,6,8,9,12,13,16,17,19,20],\n    },\n    WN1 : {\n        name: 'WN1',\n        areaSurcharge: REMOTE_AREA_SURCHARGE,\n        availableDates: [2,3,5,6,8,9,12,13,16,17,19,20],\n    },\n    S : {\n        name: 'S',\n        areaSurcharge: false,\n        availableDates: [4,5,6,7,8,11,12,13,14,15,18,19,20],\n    },\n    S1 : {\n        name: 'S1',\n        areaSurcharge: REMOTE_AREA_SURCHARGE,\n        availableDates: [4,5,6,7,8,11,12,13,14,15,18,19,20],\n    },\n    W : {\n        name: 'W',\n        areaSurcharge: false,\n        availableDates: [3,5,6,10,12,13,17,19,20],\n    },\n    W1 : {\n        name: 'W1',\n        areaSurcharge: REMOTE_AREA_SURCHARGE,\n        availableDates: [3,5,6,10,12,13,17,19,20],\n    },\n}\n\n\n/**\n * reads postcodes from a Json file.\n * returns an array of postcodes, each element is in form\n * {\n    code: 3000,\n    zone: ZONES.C1\n}\n */\nexport const fetchPostCodesFromJson = () => {\n    if (!postcodes_json) {\n        return\n    }\n    const postcodes = postcodes_json.default.map((p) => {\n        return {\n            code: p.postcode,\n            zone: ZONES[`${p.zone}${!!p.surcharge ? p.surcharge : ''}`]\n        }\n    })\n    console.dir(postcodes)\n    return postcodes\n}","import { css } from 'emotion'\nimport { RED, PALE_GREEN, CTA, DARK_GREEN } from '../colorConsts'\n\nexport const tilesWpap = css`\n  padding: 8px 0;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n\n  }\n`\n\nexport const checkboxesWpap = css`\n  margin: 0 0 1em;\n  text-align: left;\n`\n\nexport const checkboxLabel = css`\n  color: ${RED};\n  overflow: visible;\n  white-space: nowrap;\n  font-size: 1.1em;\n  line-height: 1.4em;\n  font-weight: 600;\n  width: 11em;\n  margin: 0 0 0 6em;\n\n  @media (min-width: 400px) {\n    font-size: 1.4em;\n    line-height: 1.6em;\n    margin: 0 0 0 4.5em;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0 0 0 8em;\n    font-weight: 500;\n    line-height: 1.4em;\n    width: 9em;\n  }\n\n  span {\n    color: #666;\n  }\n\n`\n\nexport const hr = css`\n  border: 0;\n  height: 0;\n  border-top: 1px solid ${CTA};\n  border-bottom: 1px solid ${CTA};\n`\n\n\nexport const h2 = css`\n  color: ${CTA};\n  font-family: 'IM Fell DW Pica SC', 'Open sans', serif !important;\n  text-transform: none;\n  line-height: 1.1em;\n  margin: 0 auto 0.4em;\n  font-weight: 500;\n`\n\nexport const boxWpap = css`\n  padding: 1em;\n  text-align: center;\n  border: 1px solid green;\n  background-color: ${PALE_GREEN};\n  margin: 1em auto 0;\n\n  @media (min-width: 768px) {\n    width: 540px;\n  }\n  \n`\n\nexport const cta = css`\n  width: 100%;\n  margin: 1em auto;\n  background-color: ${CTA};\n  font-size: 1.2em;\n\n  :active, :hover, :visited, :focus {\n    background-color: ${CTA};\n  }\n\n  :disabled {\n    background-color: #aaa;\n  }\n\n  @media (min-width: 768px) {\n    margin: 1em auto;\n    width: 12em;\n  }\n`\n\nexport const subTextGreen = css`\n  color: ${DARK_GREEN};\n  width: 100%;\n  margin: .8em auto 0;\n  font-size: 20px;\n  line-height: 22px;\n\n  @media (min-width: 768px) {\n    font-size: 1.1em;\n    line-height: 1.2em;\n  }\n`\n\nexport const surchargeMessage = css`\n  color: ${DARK_GREEN};\n  width: 100%;\n  margin: .8em auto 0;\n  font-size: 20px;\n  line-height: 22px;\n\n  @media (min-width: 768px) {\n    font-size: 1.1em;\n    line-height: 1.2em;\n  }\n`\n\nexport const installationMessage = css`\n  color: ${DARK_GREEN};\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n  font-size: 20px;\n  line-height: 22px;\n\n  @media (min-width: 768px) {\n    font-size: 1.1em;\n    line-height: 1.2em;\n  }\n`","import React from 'react'\nimport TreeTile from './treeTile'\nimport Checkbox from './checkbox'\nimport DatesField from './datesField'\nimport PostCodeInput from './postCodeInput'\nimport CouponInput from './couponInput'\nimport { TREES, LARGE_TREE_NAME } from './trees'\nimport { \n  ADDITIONAL_ITEMS, \n  STAND_KEY, \n  INSTALLATION_KEY,\n} from './additionalItems'\nimport {  \n  WEEKEND_SURCHARGE, \n  REMOTE_AREA_SURCHARGE, \n  CBD_SURCHARGE, \n  fetchPostCodesFromJson\n} from './zones'\nimport * as styles from './styles'\n\nclass TreesForm extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    const defaultTree = TREES[0] || {}\n    const defaultAdditionalSelection = ADDITIONAL_ITEMS[0] || {}\n    const postcodes = fetchPostCodesFromJson()\n\n    this.state = {\n      trees: TREES,\n      selectedTree: defaultTree,\n      checkedItemsSet: new Set([defaultAdditionalSelection]),\n      disabledItemsSet: new Set(),\n      total: defaultTree.price + defaultAdditionalSelection.price,\n      postcodes,\n      areaSurcharge: false,\n      dateSurcharge: false,\n      postCode: null,\n      deliveryDate: null,\n      isFormValid: true,\n      discount: {},\n      formErrorMessage: \"Please enter a valid PostCode and select a delivery date\",\n    }\n\n    this.selectTree = this.selectTree.bind(this)\n    this.onAdditionalItemsChange = this.onAdditionalItemsChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onDeliveryDateChange = this.onDeliveryDateChange.bind(this)\n    this.onPostCodeChange = this.onPostCodeChange.bind(this)\n    this.onCouponChange = this.onCouponChange.bind(this)\n    this.isFormValid = this.isFormValid.bind(this)\n  }\n\n  selectTree(tree) {\n    this.setState(state => {\n      const trees = state.trees.map(item => {\n        return {...item, selected: item.name === tree.name}\n      })\n      return {\n        ...state, \n        trees: trees, \n        selectedTree : tree,\n        total: this.getTotal({ tree }) \n      }\n    })\n  }\n\n  getTotal({\n    tree = this.state.selectedTree,\n    checkedItems = [...this.state.checkedItemsSet],\n    dateSurcharge = this.state.dateSurcharge,\n    areaSurcharge = this.state.areaSurcharge,\n    discount = this.state.discount,\n  }) {\n    const additinalItemsPrice = checkedItems.reduce((sum, item) => { \n        if (this.isAddedItemLargeStand(item, tree)) {\n          return sum + item.large.price \n        }\n        return sum + item.price \n      }, 0\n    )\n    const treePrice = tree.price - ((discount && discount.value) || 0)\n\n    return treePrice + additinalItemsPrice + dateSurcharge + areaSurcharge\n  }\n\n  onDeliveryDateChange(deliveryDate) { \n    const dateSurcharge = deliveryDate && (deliveryDate.day() % 6 === 0) ? WEEKEND_SURCHARGE : 0\n    const { postCode } = this.state\n\n    this.setState((state) => ({ \n      ...state,\n      deliveryDate,\n      dateSurcharge, \n      isFormValid: this.isFormValid({ deliveryDate, postCode }),\n      total: this.getTotal({ dateSurcharge }),\n    }))\n  }\n\n  onPostCodeChange(postCode, valid) { \n    const { \n      deliveryDate, \n      postcodes, \n      dateSurcharge,\n     } = this.state\n\n    if (!valid) { \n      this.setState((state) => ({ \n        ...state,\n        postCode: null,\n        isFormValid: false,\n        total: this.getTotal({ areaSurcharge: false }),\n      }))\n      return\n    }\n    const postCodeEnum = postcodes.find(c => c.code === postCode)\n    const availableDates = postCodeEnum ? postCodeEnum.zone.availableDates : []\n    const areaSurcharge = postCodeEnum ? postCodeEnum.zone.areaSurcharge : false\n\n    let newDeliveryDate = deliveryDate\n    let newDateSurcharge = dateSurcharge\n\n    // if deliveryDate is selected, but not in avaiable dates, set to null\n    if (deliveryDate && !availableDates.find(d => d === deliveryDate.date())){\n      newDeliveryDate = null\n      newDateSurcharge = null\n    }\n\n    this.setState((state) => ({ \n      ...state,\n      postCode,\n      areaSurcharge,\n      availableDates,\n      isFormValid: this.isFormValid({ deliveryDate: newDeliveryDate, postCode }),\n      deliveryDate: newDeliveryDate,\n      dateSurcharge: newDateSurcharge,\n      total: this.getTotal({ areaSurcharge, dateSurcharge }),\n    }))\n  }\n\n  onCouponChange(discount) {\n    this.setState((state) => ({ \n      ...state,\n      discount, \n      total: this.getTotal({ discount: discount || {} }),\n    }))\n  }\n\n  onAdditionalItemsChange(e) {\n    const { checkedItemsSet, isShowInstallationMessage } = this.state\n    const { name : itemKey, checked: isChecked } = e.target\n\n    const item = ADDITIONAL_ITEMS.find(i => i.key === itemKey)\n\n    if (!isChecked) {\n      checkedItemsSet.delete(item)\n    } else {\n      checkedItemsSet.add(item)\n    }\n    // this.updateInstallation(isChecked, itemKey, checkedItemsSet, disabledItemsSet)\n\n    const isShowInstallMessage = this.checkInstallation(isChecked, itemKey, checkedItemsSet)\n\n    this.setState((state) => ({ \n      ...state,\n      checkedItemsSet,\n      isShowInstallationMessage: isShowInstallMessage === null ? isShowInstallationMessage: isShowInstallMessage,\n      total: this.getTotal({checkedItems:  [...checkedItemsSet]}),\n    }));\n  }\n\n  checkInstallation(isChecked, itemKey, checkedItemsSet) {\n    // debugger\n    if (itemKey === INSTALLATION_KEY && !isChecked) {\n      return false\n    }\n    if (itemKey === STAND_KEY && isChecked) {\n      return false\n    }\n    if (itemKey === INSTALLATION_KEY && isChecked) {\n      const stand = [...checkedItemsSet].find(i => i.key === STAND_KEY)\n      return !stand\n    } \n    if (itemKey === STAND_KEY && !isChecked) {\n      const installation = [...checkedItemsSet].find(i => i.key === INSTALLATION_KEY)\n      return !!installation\n    }\n    return null\n  }\n\n  updateInstallation(isChecked, itemKey, checkedItemsSet, disabledItemsSet) {\n    if (!itemKey.includes(STAND_KEY)) { \n      return\n    }\n    const installation = ADDITIONAL_ITEMS.find(i => i.key === INSTALLATION_KEY)\n\n    if (isChecked) {\n      disabledItemsSet.delete(installation)\n    } else {\n      checkedItemsSet.delete(installation)\n      disabledItemsSet.add(installation)\n    }\n  }\n\n  getLabelText(item) {\n    return <>{item.label} <span>{`+$${item.price}`}</span></>\n  }\n\n  isFormValid ({ \n    deliveryDate, \n    postCode,\n  }) {\n    return !!postCode && !!deliveryDate\n  }\n\n  isAddedItemLargeStand(item, selectedTree) {\n    return item.key === STAND_KEY && selectedTree.name === LARGE_TREE_NAME\n  }\n\n  /*returns a string day of month with formatted like this:\n  / '01'  - zero prepending if number is one digit\n  / '10'\n  */\n  formatDate(date) {\n    return date ? ('0' + date.date()).slice(-2) : ''\n  }\n\n  formatDeliveryPrice(areaSurcharge = 0, dateSurcharge = 0) {\n    return areaSurcharge + dateSurcharge\n  }\n\n  formatTree(tree, discount) {\n    return (discount && discount.value) ? discount.productKeys[tree.name] : tree.key\n  }\n\n  formatAdditionalItemsNames(checkedItemsSet) {\n    const { selectedTree } = this.state\n    const additionalItemsNames = [...checkedItemsSet].map(i => {\n      if (this.isAddedItemLargeStand(i, selectedTree)){\n        return i.large.name\n      }\n      return i.name\n    })\n    return additionalItemsNames || []\n  }\n\n  /* \"Remote\" | \"CBD\" | \"\" */\n  formatArea(areaSurcharge) {\n    if(areaSurcharge === REMOTE_AREA_SURCHARGE) {\n      return 'Remote'\n    }\n    if(areaSurcharge === CBD_SURCHARGE) {\n      return 'CBD'\n    }\n    return ''\n  }\n\n  onSubmit(e) {\n    if(!this.isFormValid(this.state)){\n      e.preventDefault()\n      this.setState((state) => ({ \n        ...state,\n        isFormValid: false,\n      }))\n      return \n    }\n\n    console.log('tree', e.target.tree.value)\n    console.log('addOns', e.target.addOns.value)\n    console.log('postcode', e.target.postcode.value)\n    console.log('deliveryDay', e.target.deliveryDay.value)\n    console.log('area', e.target.area.value)\n    console.log('deliveryPrice', e.target.deliveryPrice.value)\n    console.log('total', e.target.total.value)\n    debugger\n  }\n\n  render() {\n    const { \n      trees, \n      total, \n      checkedItemsSet, \n      disabledItemsSet, \n      availableDates,\n      deliveryDate,\n      isFormValid,\n      formErrorMessage,\n      postcodes,\n      selectedTree,\n      areaSurcharge,\n      dateSurcharge,\n      discount,\n      isShowInstallationMessage,\n    } = this.state\n\n    const treesList = trees.map(tree => (\n      <TreeTile \n        tree={tree} \n        key={tree.name} \n        selectTree={this.selectTree}\n        discount={discount}\n      />\n    ))\n\n    const checkboxes = ADDITIONAL_ITEMS.map(item => {\n      let labelText = this.getLabelText( \n        this.isAddedItemLargeStand(item, selectedTree) ? item.large : item\n      )\n\n      const isShowMessage = item.key === INSTALLATION_KEY && isShowInstallationMessage\n      return (\n        <div key={item.key}>\n          <label className={styles.checkboxLabel}>\n            <Checkbox \n              name={item.key} \n              checked={checkedItemsSet.has(item)} \n              disabled={disabledItemsSet.has(item)} \n              onChange={this.onAdditionalItemsChange} \n            />\n            {labelText}\n          </label>\n          {isShowMessage && (\n            <p className={styles.installationMessage}>\n              {'Please note we only install into stands that have been supplied by us.'}\n            </p>\n          )}\n        </div>\n    )})\n\n    return (\n      <form \n        className={styles.boxWpap} \n        name=\"trees\"  \n        method=\"post\"  \n        action=\"/checkout\" \n        onSubmit={this.onSubmit}\n      >\n        <input name=\"tree\" value={this.formatTree(selectedTree, discount)} type=\"hidden\"/>\n        <input name=\"addOns\" value={this.formatAdditionalItemsNames(checkedItemsSet)} type=\"hidden\"/>\n        <input name=\"deliveryDay\" value={this.formatDate(deliveryDate)} type=\"hidden\"/>\n        <input name=\"area\" value={this.formatArea(areaSurcharge)} type=\"hidden\"/>\n        <input name=\"deliveryPrice\" value={this.formatDeliveryPrice(areaSurcharge, dateSurcharge)} type=\"hidden\"/>\n        <input name=\"total\" value={total || 0} type=\"hidden\"/>\n\n        <h2 className={styles.h2}>Order now</h2>\n        <hr className={styles.hr}/>\n        <div className={styles.tilesWpap}>\n          {treesList}\n        </div>\n        <div className={styles.checkboxesWpap}>\n          {checkboxes}\n        </div>\n        <hr className={styles.hr}/>\n        <div className={styles.subTextGreen}>\n          Delivery starts in December. Please note! Additional surcharge may be applied for CBD, remote suburbs and weekend deliveries.\n        </div>\n        <PostCodeInput \n          postcodes={postcodes}\n          onPostCodeChange={this.onPostCodeChange}/>\n        <DatesField \n          onDeliveryDateChange={this.onDeliveryDateChange}\n          availableDays={availableDates}\n          deliveryDate={deliveryDate}\n        />\n        {!!dateSurcharge && (\n          <p className={styles.surchargeMessage}>\n            {`Weekend surcharge of $${dateSurcharge} has been applied.`}\n          </p>\n        )}\n        <CouponInput \n          onCouponChange={this.onCouponChange}\n        />\n        <hr className={styles.hr}/>\n        <button \n          type=\"submit\"\n          className={styles.cta} \n          disabled={!isFormValid}\n        >\n            {`Buy for $${total}`}\n        </button>\n        {!isFormValid && (\n          <p className={styles.surchargeMessage}>{formErrorMessage}</p>\n        )}\n      </form>\n    )\n  }\n}\n\n\n\nexport default TreesForm\n\nTreesForm.propTypes = {\n\n}\n","import { css } from 'emotion'\nimport { RED, DARK_GREEN, YELLOW } from './colorConsts'\n\nexport const pageWpap = css`\n  &&& {\n    @media (min-width: 768px) {\n      font-size: 22px;\n      line-height: 28px;\n    }\n  }\n  * {\n    font-family: 'Abhaya Libre', serif;\n  }\n  padding: 20px;\n  text-align: center;\n  width: 100%;\n  background-image: url(\"./images/mobile_bg.png\"); \n  background-repeat: no-repeat;\n  background-size: 100%;\n\n  @media (min-width: 600px) {\n   background-image: url(\"./images/bg.png\"); \n  }\n`\n\nexport const specialOffer = css`\n  color: ${YELLOW};\n  background-color: ${RED};\n  font-weight: 600;\n\n  // font-family: 'IM Fell DW Pica SC', serif;\n  width: 100%;\n  margin: -.6em auto 0;\n  padding: 0.2em 0.4em 0.2em 3em;\n  font-size: 1em;\n  line-height: 1.1em;\n  border: 1px solid #fff;\n  position: relative;\n\n  span {\n    font-weight: 600;\n    // font-family: 'IM Fell DW Pica SC', serif;\n    font-size: 1em;\n    line-height: 1.1em;\n    color: ${YELLOW};\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    background-image: url(\"./images/mult_mobile.png\"); \n    background-repeat: no-repeat;\n    background-size: contain; \n    top: -10px;\n    left: -64px;\n    height: 140px;\n    width: 116px;\n\n    @media (min-width: 768px) {\n      background-image: url(\"./images/mult.png\"); \n      top:-3vw;\n      left: -12vw;\n      height: 23vw; \n      width: 19vw; \n    }\n  }\n\n  @media (min-width: 500px) {\n    width: 28em;\n    margin: 2vw auto 0;\n    padding: 0.5em 0.5em 0.5em 3em;\n    cursor: pointer;\n  }\n\n  @media (min-width: 768px) {\n    width: 25em;\n    font-size: 1.8vw;\n    line-height: 2.1vw;\n    padding: 0.4em 0.3em 0.3em 3.6em;\n\n    span {\n      font-size: 0.85em;\n    }\n  }\n`\n\nexport const subTextRed = css`\n  color: ${RED};\n  font-weight: 500;\n  width: 90%;\n  margin: .2em auto 1em;\n  font-size: .8em;\n  line-height: 1em;\n  letter-spacing: 1px;\n\n  @media (min-width: 400px) {\n    width: 100%;\n    font-size: 0.9em;\n    line-height: 1.1em;\n    cursor: pointer;\n  }\n\n  @media (min-width: 480px) {\n    margin: 0 auto 1em;\n    font-size: 1.2em;\n    width: 20em;\n  }\n\n  @media (min-width: 768px) {\n    width: 47vw;\n    font-size: 1.3vw;\n    line-height: 1.4vw;\n    font-weight: 600;\n    margin: 1vw auto 2vw;\n    padding-left: 4em;\n  }\n`\n\nexport const subTextGreen = css`\n  color: ${DARK_GREEN};\n  // font-family: 'Cookie', cursive;\n  width: 100%;\n  margin: 1em auto 0;\n  font-size: 20px;\n  line-height: 22px;\n\n  .desktopOnly {\n    display: none;\n  }\n\n  @media (min-width: 500px) {\n    width: 32em;\n    font-size: 0.9em;\n    line-height: 1.1em;\n\n    .desktopOnly {\n      display: inline;\n      color: ${DARK_GREEN};\n      font-size: 1em;\n      line-height: 1.1em;\n    }\n  }\n`\n\nexport const h1 = css`\n  margin: 3vw auto 28vw;\n\n  background-image: url(\"./images/jingles-logo.png\"); \n  background-repeat: no-repeat;\n  height: 95px;\n  width: 244px;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    background-image: url(\"./images/jingles-logo_big.png\"); \n    background-repeat: no-repeat;\n    background-size: contain;\n    height: 12vw;\n    width: 30vw;\n    max-height: 190px;\n    max-width: 486px;\n    margin: 3vw auto 24vw;\n  }\n`\n\nexport const car = css`\n  background-image: url(\"./images/truck_new.png\"); \n  background-repeat: no-repeat;\n  height: 179px;\n  width: 300px;\n  margin: 0 auto;\n`\n","import React from 'react'\nimport TreesForm from './treesForm'\nimport * as styles from './styles'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: undefined\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ done: true })\n    }, 200);\n  }\n\n  scrollToForm() {\n    const anchor = document.getElementsByName('trees')[0]\n    if(anchor){\n      anchor.scrollIntoView({ behavior: \"smooth\" })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.done ? (\n           <div className={styles.pageWpap}>\n             <div className={styles.specialOffer} onClick={this.scrollToForm}>\n               Standard Tree with Cinco stand for $154\n               <br/>\n               <span>including delivery in Melbourne Area during the week.</span>\n             </div>\n             <div className={styles.subTextRed} onClick={this.scrollToForm}>\n                HAVE YOU FOUND A CHEAPER CHRISTMAS TREE ELSEWHERE? \n                PLEASE CONTACT US ON 0411399607 AND WE WILL BEAT IT BY 5%!\n             </div>\n             <div className={styles.h1} onClick={this.scrollToForm}>\n             </div>\n             <div className={styles.subTextGreen}>\n              <span className='desktopOnly'>\n                Are you looking for a real Christmas tree to make your Christmas spectacular? \n              </span>\n               Our trees are sustainably grown on a farm in Daylesford (VIC).\n               With delivery, setup and disposal, you get it all covered.\n             </div>\n             <TreesForm></TreesForm>\n             <div className={styles.car}></div>\n           </div>\n        ) : (\n          <h1 className=\"loading\">Jingles Xmas Trees</h1>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'react-dates/initialize'\nimport 'react-dates/lib/css/_datepicker.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}